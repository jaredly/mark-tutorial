;; Analyzed by ClojureScript 1.7.58
{:use-macros nil, :excludes #{}, :name app.core, :imports nil, :requires {replumb replumb.core, pprint cljs.pprint, app.timers app.timers, view app.view, q quil.core, reagent.core reagent.core, r reagent.core, cljs.js cljs.js, jsc cljs.js, replumb.core replumb.core, ana cljs.analyzer, m quil.middleware, devtools devtools.core, cljsjs.codemirror cljsjs.codemirror, cljs.pprint cljs.pprint, quil.core quil.core, quil.middleware quil.middleware, cljsjs.codemirror.mode.clojure cljsjs.codemirror.mode.clojure, cljsjs.codemirror.mode.javascript cljsjs.codemirror.mode.javascript, timers app.timers, cljs.analyzer cljs.analyzer, app.view app.view, cljsjs.codemirror.addon.edit.matchbrackets cljsjs.codemirror.addon.edit.matchbrackets, devtools.core devtools.core, cljsjs.codemirror.addon.edit.closebrackets cljsjs.codemirror.addon.edit.closebrackets, cljsjs.codemirror.keymap.vim cljsjs.codemirror.keymap.vim}, :uses nil, :defs {-setup {:name app.core/-setup, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 241, :column 1, :end-line 241, :end-column 16, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 241, :column 10, :end-line 241, :end-column 16}}, run-repl {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 227, :column 7, :end-line 227, :end-column 15, :arglists (quote ([text cb]))}, :name app.core/run-repl, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :end-column 15, :method-params ([text cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 227, :end-line 227, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text cb]))}, main {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 258, :column 7, :end-line 258, :end-column 11, :arglists (quote ([]))}, :name app.core/main, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 258, :end-line 258, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, compnumber {:name app.core/compnumber, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 129, :column 1, :end-line 129, :end-column 20, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 129, :column 10, :end-line 129, :end-column 20}}, repl-num {:name app.core/repl-num, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 130, :column 1, :end-line 130, :end-column 18, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 130, :column 10, :end-line 130, :end-column 18}}, eval {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 186, :column 7, :end-line 186, :end-column 11, :arglists (quote ([source file-name callback]))}, :name app.core/eval, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :end-column 11, :method-params ([source file-name callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 186, :end-line 186, :max-fixed-arity 3, :fn-var true, :arglists (quote ([source file-name callback]))}, code-mirror {:name app.core/code-mirror, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 97, :column 1, :end-line 97, :end-column 21, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 97, :column 10, :end-line 97, :end-column 21}}, replumb-opts {:name app.core/replumb-opts, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 218, :column 1, :end-line 218, :end-column 18, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 218, :column 6, :end-line 218, :end-column 18}}, convert {:name app.core/convert, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 25, :column 1, :end-line 25, :end-column 13, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 25, :column 6, :end-line 25, :end-column 13}}, try-wrap {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 154, :column 7, :end-line 154, :end-column 15, :arglists (quote ([f arg]))}, :name app.core/try-wrap, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :end-column 15, :method-params ([f arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 154, :end-line 154, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f arg]))}, current-state {:name app.core/current-state, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 109, :column 1, :end-line 109, :end-column 19, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 109, :column 6, :end-line 109, :end-column 19}}, sketch {:name app.core/sketch, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 168, :column 14, :end-line 168, :end-column 25, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 168, :column 19, :end-line 168, :end-column 25}}, run-setup {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 196, :column 7, :end-line 196, :end-column 16, :arglists (quote ([]))}, :name app.core/run-setup, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 196, :end-line 196, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, set-print! {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 264, :column 7, :end-line 264, :end-column 17, :arglists (quote ([]))}, :name app.core/set-print!, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 264, :end-line 264, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, WIDTH {:name app.core/WIDTH, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 22, :column 1, :end-line 22, :end-column 11, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 22, :column 6, :end-line 22, :end-column 11}}, run-code {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 208, :column 7, :end-line 208, :end-column 15, :arglists (quote ([]))}, :name app.core/run-code, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 208, :end-line 208, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, reload-button {:name app.core/reload-button, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 117, :column 1, :end-line 117, :end-column 19, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 117, :column 6, :end-line 117, :end-column 19}}, make-app {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 160, :column 7, :end-line 160, :end-column 15, :arglists (quote ([]))}, :name app.core/make-app, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 160, :end-line 160, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, debug {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 122, :column 7, :end-line 122, :end-column 12, :arglists (quote ([& val])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(val)], :arglists ([& val]), :arglists-meta (nil)}}, :name app.core/debug, :variadic true, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(val)], :arglists ([& val]), :arglists-meta (nil)}, :method-params [(val)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 0, :fn-var true, :arglists ([& val])}, header {:name app.core/header, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 141, :column 1, :end-line 141, :end-column 12, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 141, :column 6, :end-line 141, :end-column 12}}, footer {:name app.core/footer, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 145, :column 1, :end-line 145, :end-column 12, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 145, :column 6, :end-line 145, :end-column 12}}, str? {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 119, :column 7, :end-line 119, :end-column 11, :arglists (quote ([val]))}, :name app.core/str?, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :end-column 11, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 119, :end-line 119, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, pprint-str {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 114, :column 7, :end-line 114, :end-column 17, :arglists (quote ([val]))}, :name app.core/pprint-str, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :end-column 17, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, default-code {:name app.core/default-code, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 27, :column 1, :end-line 27, :end-column 18, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 27, :column 6, :end-line 27, :end-column 18}}, setup-mirror {:name app.core/setup-mirror, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 88, :column 1, :end-line 88, :end-column 22, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 88, :column 10, :end-line 88, :end-column 22}}, default-state {:name app.core/default-state, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 67, :column 1, :end-line 67, :end-column 19, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 67, :column 6, :end-line 67, :end-column 19}}, wrap-fn {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 132, :column 7, :end-line 132, :end-column 14, :arglists (quote ([kwd arg]))}, :name app.core/wrap-fn, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :end-column 14, :method-params ([kwd arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 132, :end-line 132, :max-fixed-arity 2, :fn-var true, :arglists (quote ([kwd arg]))}, HEIGHT {:name app.core/HEIGHT, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 23, :column 1, :end-line 23, :end-column 12, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 23, :column 6, :end-line 23, :end-column 12}}, funcs {:name app.core/funcs, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 215, :column 13, :end-line 215, :end-column 23, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 215, :column 18, :end-line 215, :end-column 23}}, example {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 161, :column 16, :end-line 161, :end-column 23, :export true, :arglists (quote ([]))}, :name app.core/example, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 3, :line 161, :end-line 161, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, throttle {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 234, :column 7, :end-line 234, :end-column 15, :arglists (quote ([f time]))}, :name app.core/throttle, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :end-column 15, :method-params ([f time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 234, :end-line 234, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f time]))}, reset-setup {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :line 182, :column 7, :end-line 182, :end-column 18, :arglists (quote ([]))}, :name app.core/reset-setup, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {jsc cljs.js, cljs.js cljs.js, pprint cljs.pprint, cljs.pprint cljs.pprint, q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{app.timers :fn :else :value :mouse-moved :update :source :size :setup :middleware :stream :host :no-pr-str-on-value :update-functions quil.core :key-pressed :warning-as-error :host-id :no-start :draw :eval}, :order [:update-functions :mouse-moved :setup :key-pressed :draw :stream :else :host :update :size :middleware :no-start :fn :host-id :eval :source :value :warning-as-error :no-pr-str-on-value quil.core app.timers]}, :doc nil}