;; Analyzed by ClojureScript 1.7.58
{:use-macros nil, :excludes #{}, :name app.timers, :imports nil, :requires nil, :uses nil, :defs {check-timer {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/timers.cljs", :line 29, :column 7, :end-line 29, :end-column 18, :arglists (quote ([state timer]))}, :name app.timers/check-timer, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/timers.cljs", :end-column 18, :method-params ([state timer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state timer]))}, add-timer {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/timers.cljs", :line 12, :column 7, :end-line 12, :end-column 16, :arglists (quote ([state time handler]))}, :name app.timers/add-timer, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/timers.cljs", :end-column 16, :method-params ([state time handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state time handler]))}, update-ivals {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/timers.cljs", :line 44, :column 7, :end-line 44, :end-column 19, :arglists (quote ([state]))}, :name app.timers/update-ivals, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/timers.cljs", :end-column 19, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, check-ival {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/timers.cljs", :line 34, :column 7, :end-line 34, :end-column 17, :arglists (quote ([state [name timer]]))}, :name app.timers/check-ival, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/timers.cljs", :end-column 17, :method-params ([state p__17434]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state [name timer]]))}, remove-ival {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/timers.cljs", :line 22, :column 7, :end-line 22, :end-column 18, :arglists (quote ([state name]))}, :name app.timers/remove-ival, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/timers.cljs", :end-column 18, :method-params ([state name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state name]))}, num-timers {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/timers.cljs", :line 4, :column 7, :end-line 4, :end-column 17, :arglists (quote ([state]))}, :name app.timers/num-timers, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/timers.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, update-timers {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/timers.cljs", :line 39, :column 7, :end-line 39, :end-column 20, :arglists (quote ([state]))}, :name app.timers/update-timers, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/timers.cljs", :end-column 20, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, add-ival {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/timers.cljs", :line 17, :column 7, :end-line 17, :end-column 15, :arglists (quote ([state name time handler]))}, :name app.timers/add-ival, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/timers.cljs", :end-column 15, :method-params ([state name time handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 4, :fn-var true, :arglists (quote ([state name time handler]))}, timer-ready {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/timers.cljs", :line 26, :column 7, :end-line 26, :end-column 18, :arglists (quote ([timer]))}, :name app.timers/timer-ready, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/timers.cljs", :end-column 18, :method-params ([timer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([timer]))}, new-timer {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/timers.cljs", :line 7, :column 7, :end-line 7, :end-column 16, :arglists (quote ([time handler]))}, :name app.timers/new-timer, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/timers.cljs", :end-column 16, :method-params ([time handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([time handler]))}, middleware {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/timers.cljs", :line 55, :column 7, :end-line 55, :end-column 17, :arglists (quote ([options]))}, :name app.timers/middleware, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/timers.cljs", :end-column 17, :method-params ([options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([options]))}, update-fn {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/timers.cljs", :line 49, :column 7, :end-line 49, :end-column 16, :arglists (quote ([orig state]))}, :name app.timers/update-fn, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/timers.cljs", :end-column 16, :method-params ([orig state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists (quote ([orig state]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:time :start :app.timers/timers :update :app.timers/ivals :handler}, :order [:app.timers/timers :start :time :handler :app.timers/ivals :update]}, :doc nil}