;; Analyzed by ClojureScript 1.7.58
{:use-macros {reaction reagent.ratom}, :excludes #{}, :name app.view, :imports nil, :requires {re-frame.core re-frame.core, r reagent.core, reagent.core reagent.core, app.handlers app.handlers, app.subs app.subs, helpers app.views.helpers, app.views.helpers app.views.helpers}, :uses {subscribe re-frame.core, register-sub re-frame.core, dispatch-sync re-frame.core, dispatch re-frame.core, register-handler re-frame.core}, :defs {initial-state {:name app.view/initial-state, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/view.cljs", :line 93, :column 1, :end-line 93, :end-column 19, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/view.cljs", :line 93, :column 6, :end-line 93, :end-column 19}}, repl-item {:name app.view/repl-item, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/view.cljs", :line 47, :column 1, :end-line 47, :end-column 20, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/view.cljs", :line 47, :column 11, :end-line 47, :end-column 20}}, log {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/view.cljs", :line 101, :column 7, :end-line 101, :end-column 10, :arglists (quote ([val]))}, :name app.view/log, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/view.cljs", :end-column 10, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, view {:name app.view/view, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/view.cljs", :line 38, :column 1, :end-line 38, :end-column 10, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/view.cljs", :line 38, :column 6, :end-line 38, :end-column 10}}, text {:name app.view/text, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/view.cljs", :line 39, :column 1, :end-line 39, :end-column 10, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/view.cljs", :line 39, :column 6, :end-line 39, :end-column 10}}, repl-items {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/view.cljs", :line 60, :column 7, :end-line 60, :end-column 17, :arglists (quote ([items]))}, :name app.view/repl-items, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/view.cljs", :end-column 17, :method-params ([items]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists (quote ([items]))}, init {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/view.cljs", :line 98, :column 7, :end-line 98, :end-column 11, :arglists (quote ([]))}, :name app.view/init, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/view.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, repl-input {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/view.cljs", :line 65, :column 7, :end-line 65, :end-column 17, :arglists (quote ([submit]))}, :name app.view/repl-input, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/view.cljs", :end-column 17, :method-params ([submit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 1, :fn-var true, :arglists (quote ([submit]))}, set-print! {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/view.cljs", :line 104, :column 7, :end-line 104, :end-column 17, :arglists (quote ([]))}, :name app.view/set-print!, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/view.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, str? {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/view.cljs", :line 41, :column 7, :end-line 41, :end-column 11, :arglists (quote ([val]))}, :name app.view/str?, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/view.cljs", :end-column 11, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, pprint-str {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/view.cljs", :line 44, :column 7, :end-line 44, :end-column 17, :arglists (quote ([val]))}, :name app.view/pprint-str, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/view.cljs", :end-column 17, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, repl {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/view.cljs", :line 81, :column 7, :end-line 81, :end-column 11, :arglists (quote ([execute]))}, :name app.view/repl, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/view.cljs", :end-column 11, :method-params ([execute]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([execute]))}, styles {:name app.view/styles, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/view.cljs", :line 16, :column 1, :end-line 16, :end-column 12, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/1y2r/rcesf6/app/view.cljs", :line 16, :column 6, :end-line 16, :end-column 12}}}, :require-macros {reagent.ratom reagent.ratom}, :cljs.analyzer/constants {:seen #{:output-item :repl-items :log-item :add-item :input-item :output-caret :placeholder :init :white-space :font-size :repl-input :default :overflow :value :hist-pos :background-color :add-result :history :type :flex :output :input-caret :flex-shrink :style :stream :set-text :add-input :padding :go-down :container :display :input :items :margin-right :go-up :on-change :hierarchy :current-text :on-key-down :auto :repl-item :log :none :font-family :flex-direction :height :row :text}, :order [:container :repl-items :repl-item :input-item :output-item :input-caret :output-caret :repl-input :font-family :flex :background-color :display :white-space :overflow :height :flex-shrink :auto :flex-direction :padding :row :margin-right :font-size :stream :hierarchy :type :default :input :text :style :log :value :log-item :output :current-text :none :go-up :go-down :on-change :placeholder :on-key-down :set-text :items :add-input :add-result :hist-pos :history :init :add-item]}, :doc nil}