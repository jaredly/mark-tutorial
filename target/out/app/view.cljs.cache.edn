;; Analyzed by ClojureScript 1.7.58
{:use-macros {reaction reagent.ratom}, :excludes #{}, :name app.view, :imports nil, :requires {pprint cljs.pprint, helpers app.views.helpers, reagent.core reagent.core, r reagent.core, devtools devtools.format, cljs.pprint cljs.pprint, app.handlers app.handlers, app.subs app.subs, devtools.format devtools.format, str clojure.string, clojure.string clojure.string, cljs.reader cljs.reader, app.views.helpers app.views.helpers, re-frame.core re-frame.core}, :uses {subscribe re-frame.core, register-sub re-frame.core, dispatch-sync re-frame.core, dispatch re-frame.core, register-handler re-frame.core}, :defs {initial-state {:name app.view/initial-state, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 294, :column 1, :end-line 294, :end-column 19, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 294, :column 6, :end-line 294, :end-column 19}}, repl-item {:name app.view/repl-item, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 123, :column 1, :end-line 123, :end-column 20, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 123, :column 11, :end-line 123, :end-column 20}}, log {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 302, :column 7, :end-line 302, :end-column 10, :arglists (quote ([val]))}, :name app.view/log, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :end-column 10, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 302, :end-line 302, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, show-str {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 74, :column 7, :end-line 74, :end-column 15, :arglists (quote ([val]))}, :name app.view/show-str, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :end-column 15, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, view {:name app.view/view, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 63, :column 1, :end-line 63, :end-column 10, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 63, :column 6, :end-line 63, :end-column 10}}, text {:name app.view/text, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 64, :column 1, :end-line 64, :end-column 10, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 64, :column 6, :end-line 64, :end-column 10}}, cm-options {:name app.view/cm-options, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 225, :column 1, :end-line 225, :end-column 16, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 225, :column 6, :end-line 225, :end-column 16}}, code-mirror {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 157, :column 7, :end-line 157, :end-column 18, :arglists (quote ([value-atom {:keys [style on-change on-eval on-up on-down should-go-up should-go-down should-eval]}]))}, :name app.view/code-mirror, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :end-column 18, :method-params ([value-atom p__17260]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 157, :end-line 157, :max-fixed-arity 2, :fn-var true, :arglists (quote ([value-atom {:keys [style on-change on-eval on-up on-down should-go-up should-go-down should-eval]}]))}, repl-items {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 152, :column 7, :end-line 152, :end-column 17, :arglists (quote ([items]))}, :name app.view/repl-items, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :end-column 17, :method-params ([items]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 1, :fn-var true, :arglists (quote ([items]))}, init {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 299, :column 7, :end-line 299, :end-column 11, :arglists (quote ([]))}, :name app.view/init, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 299, :end-line 299, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, repl-input {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 255, :column 7, :end-line 255, :end-column 17, :arglists (quote ([submit]))}, :name app.view/repl-input, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :end-column 17, :method-params ([submit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 255, :end-line 255, :max-fixed-arity 1, :fn-var true, :arglists (quote ([submit]))}, set-print! {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 305, :column 7, :end-line 305, :end-column 17, :arglists (quote ([]))}, :name app.view/set-print!, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 305, :end-line 305, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, button {:name app.view/button, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 65, :column 1, :end-line 65, :end-column 12, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 65, :column 6, :end-line 65, :end-column 12}}, show-value {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 102, :column 7, :end-line 102, :end-column 17, :arglists (quote ([val config]))}, :name app.view/show-value, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :end-column 17, :method-params ([val config]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 2, :fn-var true, :arglists (quote ([val config]))}, is-valid-cljs? {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 217, :column 7, :end-line 217, :end-column 21, :arglists (quote ([source]))}, :name app.view/is-valid-cljs?, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :end-column 21, :method-params ([source]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 217, :end-line 217, :max-fixed-arity 1, :fn-var true, :arglists (quote ([source]))}, show-el {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 90, :column 7, :end-line 90, :end-column 14, :arglists (quote ([val]))}, :name app.view/show-el, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :end-column 14, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, parse-style {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 84, :column 7, :end-line 84, :end-column 18, :arglists (quote ([raw]))}, :name app.view/parse-style, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :end-column 18, :method-params ([raw]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 1, :fn-var true, :arglists (quote ([raw]))}, str? {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 67, :column 7, :end-line 67, :end-column 11, :arglists (quote ([val]))}, :name app.view/str?, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :end-column 11, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, pprint-str {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 70, :column 7, :end-line 70, :end-column 17, :arglists (quote ([val]))}, :name app.view/pprint-str, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :end-column 17, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, js-array? {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 81, :column 7, :end-line 81, :end-column 16, :arglists (quote ([val]))}, :name app.view/js-array?, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :end-column 16, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, repl {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 279, :column 7, :end-line 279, :end-column 11, :arglists (quote ([execute]))}, :name app.view/repl, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :end-column 11, :method-params ([execute]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 279, :end-line 279, :max-fixed-arity 1, :fn-var true, :arglists (quote ([execute]))}, styles {:name app.view/styles, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 20, :column 1, :end-line 20, :end-column 12, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/mark/qmh/rcesf6/app/view.cljs", :line 20, :column 6, :end-line 20, :end-column 12}}}, :require-macros {reagent.ratom reagent.ratom, pprint cljs.pprint, cljs.pprint cljs.pprint}, :cljs.analyzer/constants {:seen #{:output-item :repl-items :log-item :caret :add-item :input-item :clear-items :error-item :color :output-caret :on-up :init :input-text :else :should-eval :white-space :font-size :repl-input :font-weight :default :overflow :break-word :margin-left :value :hist-pos :component-did-mount :should-go-down :background-color :word-wrap :add-result :should-go-up :on-down :component-did-update :output-value :history :cursor :type :flex :on-eval :output :input-caret :flex-shrink :on-click :style :stream :div :set-text :add-input :reagent-render :padding-top :pointer :clear-button :red :padding :go-down :container :value-toggle :display :error :value-head :input :items :margin-right :go-up :on-change :hierarchy :current-text :border-top :auto :repl-item :log :none :value-with-body :font-family :flex-direction :height :row :text}, :order [:output-item :repl-items :caret :input-item :error-item :output-caret :input-text :repl-input :output-value :input-caret :clear-button :container :value-toggle :value-head :repl-item :flex :overflow :height :flex-shrink :auto :color :font-weight :margin-right :margin-left :font-size :padding-top :padding :red :word-wrap :break-word :font-family :background-color :display :white-space :cursor :pointer :flex-direction :row :stream :style :value-with-body :on-click :hierarchy :type :default :input :text :log :value :log-item :error :output :on-change :on-eval :on-up :on-down :should-go-up :should-go-down :should-eval :component-did-mount :component-did-update :reagent-render :none :div :else :current-text :border-top :set-text :go-up :go-down :items :add-input :add-result :clear-items :hist-pos :history :init :add-item]}, :doc nil}